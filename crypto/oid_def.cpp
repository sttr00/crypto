// This file was automatically generated by the 'make_oid_table' program

#include "oid_def.h"
#include "oid_const.h"
#include <stdint.h>

static const uint8_t d1[]  = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01 }; // ID_RSA
static const uint8_t d2[]  = { 0x2A, 0x86, 0x48, 0xCE, 0x38, 0x04, 0x01 }; // ID_DSA
static const uint8_t d3[]  = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x0A }; // ID_RSASSA_PSS
static const uint8_t d4[]  = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x02, 0x02 }; // ID_HASH_MD2
static const uint8_t d5[]  = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x02, 0x05 }; // ID_HASH_MD5
static const uint8_t d6[]  = { 0x2B, 0x0E, 0x03, 0x02, 0x1A }; // ID_HASH_SHA1
static const uint8_t d7[]  = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01 }; // ID_HASH_SHA256
static const uint8_t d8[]  = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x02 }; // ID_HASH_SHA384
static const uint8_t d9[]  = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x03 }; // ID_HASH_SHA512
static const uint8_t d10[] = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x04 }; // ID_HASH_SHA224
static const uint8_t d11[] = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x05 }; // ID_HASH_SHA512_224
static const uint8_t d12[] = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x06 }; // ID_HASH_SHA512_256
static const uint8_t d13[] = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x07 }; // ID_HASH_SHA3_224
static const uint8_t d14[] = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x08 }; // ID_HASH_SHA3_256
static const uint8_t d15[] = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x09 }; // ID_HASH_SHA3_384
static const uint8_t d16[] = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x0A }; // ID_HASH_SHA3_512
static const uint8_t d17[] = { 0x2A, 0x85, 0x03, 0x07, 0x01, 0x01, 0x02, 0x02 }; // ID_HASH_STREEBOG256
static const uint8_t d18[] = { 0x2A, 0x85, 0x03, 0x07, 0x01, 0x01, 0x02, 0x03 }; // ID_HASH_STREEBOG512
static const uint8_t d19[] = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x02 }; // ID_SIGN_RSA_MD2
static const uint8_t d20[] = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x04 }; // ID_SIGN_RSA_MD5
static const uint8_t d21[] = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x05 }; // ID_SIGN_RSA_SHA1
static const uint8_t d22[] = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x0E }; // ID_SIGN_RSA_SHA224
static const uint8_t d23[] = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x0B }; // ID_SIGN_RSA_SHA256
static const uint8_t d24[] = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x0C }; // ID_SIGN_RSA_SHA384
static const uint8_t d25[] = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x0D }; // ID_SIGN_RSA_SHA512
static const uint8_t d26[] = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x0F }; // ID_SIGN_RSA_SHA512_224
static const uint8_t d27[] = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x10 }; // ID_SIGN_RSA_SHA512_256
static const uint8_t d28[] = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x03, 0x0D }; // ID_SIGN_RSA_SHA3_224
static const uint8_t d29[] = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x03, 0x0E }; // ID_SIGN_RSA_SHA3_256
static const uint8_t d30[] = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x03, 0x0F }; // ID_SIGN_RSA_SHA3_384
static const uint8_t d31[] = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x03, 0x10 }; // ID_SIGN_RSA_SHA3_512
static const uint8_t d32[] = { 0x2A, 0x86, 0x48, 0xCE, 0x38, 0x04, 0x03 }; // ID_SIGN_DSA_SHA1
static const uint8_t d33[] = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x03, 0x01 }; // ID_SIGN_DSA_SHA224
static const uint8_t d34[] = { 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x03, 0x02 }; // ID_SIGN_DSA_SHA256
static const uint8_t d35[] = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x08 }; // ID_MGF1
static const uint8_t d36[] = { 0x55, 0x04, 0x03 }; // ID_AT_COMMON_NAME
static const uint8_t d37[] = { 0x55, 0x04, 0x29 }; // ID_AT_NAME
static const uint8_t d38[] = { 0x55, 0x04, 0x04 }; // ID_AT_SURNAME
static const uint8_t d39[] = { 0x55, 0x04, 0x2A }; // ID_AT_GIVEN_NAME
static const uint8_t d40[] = { 0x55, 0x04, 0x2B }; // ID_AT_INITIALS
static const uint8_t d41[] = { 0x55, 0x04, 0x2C }; // ID_AT_GENERATION_QUALIFIER
static const uint8_t d42[] = { 0x55, 0x04, 0x07 }; // ID_AT_LOCALITY_NAME
static const uint8_t d43[] = { 0x55, 0x04, 0x08 }; // ID_AT_STATE_OR_PROVINCE_NAME
static const uint8_t d44[] = { 0x55, 0x04, 0x0A }; // ID_AT_ORGANIZATION_NAME
static const uint8_t d45[] = { 0x55, 0x04, 0x0B }; // ID_AT_ORGANIZATIONAL_UNIT_NAME
static const uint8_t d46[] = { 0x55, 0x04, 0x0C }; // ID_AT_TITLE
static const uint8_t d47[] = { 0x55, 0x04, 0x2E }; // ID_AT_DN_QUALIFIER
static const uint8_t d48[] = { 0x55, 0x04, 0x06 }; // ID_AT_COUNTRY_NAME
static const uint8_t d49[] = { 0x55, 0x04, 0x05 }; // ID_AT_SERIAL_NUMBER
static const uint8_t d50[] = { 0x55, 0x04, 0x41 }; // ID_AT_PSEUDONYM
static const uint8_t d51[] = { 0x09, 0x92, 0x26, 0x89, 0x93, 0xF2, 0x2C, 0x64, 0x01, 0x19 }; // ID_AT_DOMAIN_COMPONENT
static const uint8_t d52[] = { 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x09, 0x01 }; // ID_AT_EMAIL_ADDRESS

static const oid::oid_def defs[] =
{
 { d1,  sizeof(d1)  },
 { d2,  sizeof(d2)  },
 { d3,  sizeof(d3)  },
 { d4,  sizeof(d4)  },
 { d5,  sizeof(d5)  },
 { d6,  sizeof(d6)  },
 { d7,  sizeof(d7)  },
 { d8,  sizeof(d8)  },
 { d9,  sizeof(d9)  },
 { d10, sizeof(d10) },
 { d11, sizeof(d11) },
 { d12, sizeof(d12) },
 { d13, sizeof(d13) },
 { d14, sizeof(d14) },
 { d15, sizeof(d15) },
 { d16, sizeof(d16) },
 { d17, sizeof(d17) },
 { d18, sizeof(d18) },
 { d19, sizeof(d19) },
 { d20, sizeof(d20) },
 { d21, sizeof(d21) },
 { d22, sizeof(d22) },
 { d23, sizeof(d23) },
 { d24, sizeof(d24) },
 { d25, sizeof(d25) },
 { d26, sizeof(d26) },
 { d27, sizeof(d27) },
 { d28, sizeof(d28) },
 { d29, sizeof(d29) },
 { d30, sizeof(d30) },
 { d31, sizeof(d31) },
 { d32, sizeof(d32) },
 { d33, sizeof(d33) },
 { d34, sizeof(d34) },
 { d35, sizeof(d35) },
 { d36, sizeof(d36) },
 { d37, sizeof(d37) },
 { d38, sizeof(d38) },
 { d39, sizeof(d39) },
 { d40, sizeof(d40) },
 { d41, sizeof(d41) },
 { d42, sizeof(d42) },
 { d43, sizeof(d43) },
 { d44, sizeof(d44) },
 { d45, sizeof(d45) },
 { d46, sizeof(d46) },
 { d47, sizeof(d47) },
 { d48, sizeof(d48) },
 { d49, sizeof(d49) },
 { d50, sizeof(d50) },
 { d51, sizeof(d51) },
 { d52, sizeof(d52) }
};

const oid::oid_def *oid::get(int id)
{
 if (id < 1 || id > oid::MAX_ID) return nullptr;
 return defs + id-1;
}
